//  -*-  mode: C++;  fill-column: 132-*-
//  Time-stamp: "Modified on 29-October-2015 at 15:06:02 by jeff on Jeffs-MacBook-Pro"

//  Note: clang on OSX doesn't generate code similar to that generated by gcc.  In particular, it dooesn't use rsqrt_xx.  Rather it
//  generates sqrt_ss followed by div_ss.

#include <cmath>
#include <cstdio>
#include <cstring>

//  External routines:
float rsqrt_Ofast(float x);
float rsqrt_NR1(float arg);
float rsqrt_NR2(float arg);

int
main(int argc, char* argv[]) {

    float arg = 0.1f;
    float result;
    unsigned int iresult;

    printf("\nFull precision:\n");
    result = 1.0f / std::sqrt(arg);
    memcpy(&iresult, &result, sizeof(result));
    printf("    result = %.8f  %.6a  0x%8.8x\n", result, result, iresult);

    printf("Fast:\n");
    result = rsqrt_Ofast(arg);
    memcpy(&iresult, &result, sizeof(result));
    printf("    result = %.8f  %.6a  0x%8.8x\n", result, result, iresult);

    printf("NR1:\n");
    result = rsqrt_NR1(arg);
    memcpy(&iresult, &result, sizeof(result));
    printf("    result = %.8f  %.6a  0x%8.8x\n", result, result, iresult);

    printf("NR2:\n");
    result = rsqrt_NR2(arg);
    memcpy(&iresult, &result, sizeof(result));
    printf("    result = %.8f  %.6a  0x%8.8x\n", result, result, iresult);

    return 0;
}
